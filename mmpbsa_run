#!/bin/bash

echo "running in $dir"
cd $dir
f=$( find .. -type f -name "*receptor_md1.nc")
i=${f:3:3}
cd ..
echo `ptrajit2 ${i}receptor | cpptraj`
id=$(basename $(pwd))
cd $dir
cp ../*.prmtop .
cp ../${i}.* .
cp ../receptor.pdb .
cp ../${i}receptor.dcd .
rm -f mmpbsa.leap
rm -f *.{top,crd}
rm -f *_new.{prmtop,top}
rm -f *_mmpbsa.{prmtop,top}
echo "source leaprc.ff14SB" >> mmpbsa.leap
echo "source leaprc.gaff" >> mmpbsa.leap
echo "loadAmberParams $i.frcmod" >> mmpbsa.leap
echo "$i = loadMol2 $i.mol2" >> mmpbsa.leap
echo "receptor = loadPDB receptor.pdb" >> mmpbsa.leap
echo "complex = combine {receptor $i}" >> mmpbsa.leap
echo "set default PBRadii mbondi2" >> mmpbsa.leap
echo "saveAmberParm $i $i.top $i.crd" >> mmpbsa.leap
echo "saveAmberParm receptor rec.top rec.crd" >> mmpbsa.leap
echo "saveAmberParm complex com.top com.crd" >> mmpbsa.leap
echo "quit" >> mmpbsa.leap
echo `tleap -f mmpbsa.leap`
echo `parmedit $i | parmed.py`
rm -f run.pbs
echo "#!/bin/bash" >> run.pbs
echo "#PBS -N $id" >> run.pbs
echo "#PBS -j oe" >> run.pbs
echo "#PBS -l nodes=1:ppn=1" >> run.pbs
echo "#PBS -l walltime=28:00:00:00" >> run.pbs
echo "#PBS -q dept_24_core" >> run.pbs
echo "echo Running on \`hostname\`" >> run.pbs
echo "echo workdir \$PBS_O_WORKDIR" >> run.pbs
echo "echo ld_library_path \$LD_LIBRARY_PATH" >> run.pbs
echo "cd \$PBS_O_WORKDIR" >> run.pbs
echo "SCRDIR=/scr/\$PBS_JOBID" >> run.pbs
echo "if [[ ! -e \$SCRDIR ]]; then" >> run.pbs
echo "mkdir \$SCRDIR" >> run.pbs
echo "fi" >> run.pbs
echo "echo scratch drive \${SCRDIR}" >> run.pbs
echo "cp \$PBS_O_WORKDIR/* \${SCRDIR}" >> run.pbs
echo "cd \${SCRDIR}" >> run.pbs
echo "AMBERHOME=/usr/local/amber14" >> run.pbs
echo "PATH=/usr/local/amber14/bin:\$PATH" >> run.pbs
echo 'trap "find . -type f -name _MMPBSA\* -exec cp {} \$PBS_O_WORKDIR \\;" EXIT' >> run.pbs
echo "MMPBSA.py -O -i mmpbsa.in -o mmpbsa.dat -sp ${i}receptor_mmpbsa.prmtop -cp com_mmpbsa.top -rp rec_mmpbsa.top -lp ${i}_mmpbsa.prmtop -y ${i}receptor.dcd" >> run.pbs
echo "cp mmpbsa.dat \$PBS_O_WORKDIR" >> run.pbs
echo "exit" >> run.pbs
echo `MMPBSA.py -O -i mmpbsa.in -o mmpbsa.dat -sp ${i}receptor_mmpbsa.prmtop -cp com_mmpbsa.top -rp rec_mmpbsa.top -lp ${i}_mmpbsa.prmtop -y ${i}recetor.dcd` 
done
